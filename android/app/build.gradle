def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = ''
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = ''
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }

    defaultConfig {
        applicationId 'com.mandarin.vpn'
        minSdkVersion 23
        targetSdkVersion 34
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

   signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
                if (!project.hasProperty('target-platform')) {
                    abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
                } else {
                    def platforms = project.property('target-platform').split(',')
                    def platformMap = [
                            'android-arm'  : 'armeabi-v7a',
                            'android-arm64': 'arm64-v8a',
                            'android-x86'  : 'x86',
                            'android-x64'  : 'x86_64',
                    ]
                    abiFilters = platforms.stream().map({ e ->
                        platformMap.containsKey(e) ? platformMap[e] : e
                    }).toArray()
                }
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // Java Implementations
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Other Implementations
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':vpnLib')
    implementation 'androidx.core:core:1.1.0'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-base:17.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.android.installreferrer:installreferrer:2.2"

    // AppMetrica Implementations
    // implementation 'com.yandex.android:mobmetricalib:5.0.0'
    // implementation "com.yandex.android:mobmetricapushlib:2.2.0"

    // Google Ads Implementation
    // implementation 'com.google.android.gms:play-services-ads-identifier:17.0.1'

    // Firebase Implementation
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'

    // Appodeal Ads Implementation
    // implementation ('com.appodeal.ads:sdk:3.0.0.+') {
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'adjust'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'appsflyer'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'firebase'
    //     exclude group: 'com.appodeal.ads.sdk.services', module: 'facebook_analytics'
    // }

    implementation 'com.appodeal.ads.sdk:core:3.0.0'
    implementation 'com.appodeal.ads.sdk.networks:applovin:3.0.0.2'
    implementation 'com.appodeal.ads.sdk.networks:bidmachine:3.0.0.4'
    implementation 'com.appodeal.ads.sdk.networks:admob:3.0.0.3'
    implementation 'com.appodeal.ads.sdk.networks:mraid:3.0.0.0'
    implementation 'com.appodeal.ads.sdk.services:stack_analytics:3.0.0.0'
    implementation 'com.appodeal.ads.sdk.networks:yandex:3.0.0.3'

    // implementation 'com.android.ndk.thirdparty:openssl:1.1.1l-beta-1'
}